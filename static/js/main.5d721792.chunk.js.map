{"version":3,"sources":["ui/features/home/HomePage.module.scss","ui/form/SettingForm.module.scss","ui/features/gradient/Gradient.module.scss","ui/features/newItem/NewGradient.module.scss","ui/features/editItem/EditGradient.module.scss","ui/app/App.module.scss","ui/features/gradient/Gradient.tsx","bll/gradients-reducer.ts","bll/store.ts","ui/features/home/HomePage.tsx","ui/form/SettingForm.tsx","ui/features/newItem/NewGradient.tsx","ui/features/editItem/EditGradient.tsx","ui/app/App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","Gradient","gradient","removeGradient","navigate","useNavigate","color1","color2","styleButton1","backgroundColor","color","borderColor","styleButton2","gradientStyle","background","className","s","gradientContainer","style","buttonBlock","onClick","id","slice","createSlice","name","initialState","reducers","addNewGradient","state","action","push","payload","deleteGradient","index","findIndex","i","splice","changeColorsGradient","gradientsReducer","reducer","actions","rootReducer","combineReducers","gradients","store","configureStore","middleware","getDefaultMiddleware","prepend","thunk","window","useAppDispatch","useDispatch","HomePage","dispatch","useSelector","containerHome","buttonAddGradient","to","infoContainer","length","containerGradient","map","item","ind","SettingForm","React","memo","changeCallback","values","formik","useFormik","initialValues","validate","errors","test","onSubmit","resetForm","formBox","handleSubmit","htmlFor","labelTitle","placeholder","getFieldProps","touched","type","NewGradient","containerNew","text","uuidv4","newGradient","EditGradient","gradientValues","useParams","filter","containerEdit","App","app","path","element","replace","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5d721792.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"containerHome\":\"HomePage_containerHome__38mC7\",\"buttonAddGradient\":\"HomePage_buttonAddGradient__1UFNA\",\"infoContainer\":\"HomePage_infoContainer__6EhgV\",\"containerGradient\":\"HomePage_containerGradient__2zuFu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formBox\":\"SettingForm_formBox__2QVk2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gradientContainer\":\"Gradient_gradientContainer__896ij\",\"buttonBlock\":\"Gradient_buttonBlock__3C9r9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"containerNew\":\"NewGradient_containerNew__F3FhQ\",\"text\":\"NewGradient_text__1XLNp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"containerEdit\":\"EditGradient_containerEdit__3ABy9\",\"text\":\"EditGradient_text__1E77Q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__fnbR_\"};","import React from \"react\";\r\nimport s from './Gradient.module.scss'\r\nimport {GradientType} from \"../../../bll/gradients-reducer\";\r\nimport {useNavigate} from \"react-router-dom\";\r\n\r\nexport const Gradient: React.FC<GradientPropsType> = ({gradient, removeGradient}) => {\r\n\r\n    const navigate = useNavigate()\r\n\r\n    const {color1, color2} = gradient\r\n    const styleButton1 = {\r\n        backgroundColor: color2,\r\n        color: color1,\r\n        borderColor: color1,\r\n    }\r\n    const styleButton2 = {\r\n        backgroundColor: color1,\r\n        color: color2,\r\n        borderColor: color2,\r\n    }\r\n\r\n    const gradientStyle = {\r\n        background: `linear-gradient(to right, ${color1}, ${color2})`,\r\n    }\r\n    const clickDelete = () => {\r\n        removeGradient(gradient.id)\r\n    }\r\n    const clickEdit = () => {\r\n        navigate(`edit/${gradient.id}`)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={s.gradientContainer} style={gradientStyle}>\r\n                <div style={{color: color2}}>{color1}</div>\r\n                <div className={s.buttonBlock}>\r\n                    <button style={styleButton1} onClick={clickDelete}>delete</button>\r\n                    <button style={styleButton2} onClick={clickEdit}>edit</button>\r\n                </div>\r\n                <div style={{color: color1}}>{color2}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n//types\r\n\r\ntype GradientPropsType = {\r\n    gradient: GradientType\r\n    removeGradient: (id: string) => void\r\n}\r\n","import {createSlice, PayloadAction} from \"@reduxjs/toolkit\"\r\n\r\nconst slice = createSlice({\r\n\r\n    name: 'gradients',\r\n    initialState: [] as Array<GradientType>,\r\n    reducers: {\r\n        addNewGradient(state, action: PayloadAction<{ gradient: GradientType }>) {\r\n            state.push(action.payload.gradient)\r\n        },\r\n        deleteGradient(state, action: PayloadAction<{ id: string }>) {\r\n            const index = state.findIndex(i => i.id === action.payload.id)\r\n            state.splice(index, 1)\r\n        },\r\n        changeColorsGradient(state, action: PayloadAction<{ gradient: GradientType }>) {\r\n            const index = state.findIndex(i => i.id === action.payload.gradient.id)\r\n            state.splice(index, 1, action.payload.gradient)\r\n        },\r\n    },\r\n})\r\n\r\nexport const gradientsReducer = slice.reducer\r\n\r\nexport const {addNewGradient, deleteGradient, changeColorsGradient} = slice.actions\r\n\r\n\r\nexport type GradientType = {\r\n    id: string\r\n    color1: string\r\n    color2: string\r\n\r\n}\r\n\r\n","import thunk from 'redux-thunk';\r\nimport {combineReducers, configureStore} from \"@reduxjs/toolkit\";\r\nimport {gradientsReducer} from \"./gradients-reducer\";\r\nimport {useDispatch} from \"react-redux\";\r\n\r\nconst rootReducer = combineReducers({\r\n    gradients: gradientsReducer,\r\n})\r\n\r\nexport const store = configureStore({\r\n    reducer: rootReducer,\r\n    middleware: (getDefaultMiddleware) => getDefaultMiddleware().prepend(thunk)\r\n})\r\n\r\n\r\n// @ts-ignore\r\nwindow.store = store;\r\n\r\n\r\n//redux common types\r\nexport type RootReducerType = typeof rootReducer\r\n\r\nexport const useAppDispatch = () => useDispatch<AppDispatchType>()\r\n// определить автоматически тип всего объекта состояния\r\nexport type AppRootStateType = ReturnType<RootReducerType>\r\nexport type AppDispatchType = typeof store.dispatch","import React from \"react\";\r\nimport {Gradient} from \"../gradient/Gradient\";\r\nimport s from './HomePage.module.scss'\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppRootStateType, useAppDispatch} from \"../../../bll/store\";\r\nimport {deleteGradient, GradientType} from \"../../../bll/gradients-reducer\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nexport const HomePage: React.FC = () => {\r\n\r\n    const dispatch = useAppDispatch()\r\n    const gradients = useSelector<AppRootStateType, GradientType[]>(state => state.gradients)\r\n\r\n    const removeGradient = (id: string) => {\r\n        dispatch(deleteGradient({id}))\r\n    }\r\n\r\n    return (\r\n        <div className={s.containerHome}>\r\n            <div className={s.buttonAddGradient}>\r\n                <Link to='new'>add new gradient</Link>\r\n            </div>\r\n            <div className={s.infoContainer}>\r\n                {`colors gradient${gradients.length > 1 ? 's' : ''}: `}<b>{gradients.length}</b>\r\n            </div>\r\n            <div className={s.containerGradient}>\r\n\r\n                {\r\n                    gradients.length\r\n                        ? gradients.map((item, ind) => (<Gradient key={ind}\r\n                                                                  gradient={item}\r\n                                                                  removeGradient={removeGradient}/>))\r\n                        : 'you do not have gradients'\r\n                }\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}","import {useFormik} from \"formik\";\r\nimport React from \"react\";\r\nimport s from './SettingForm.module.scss'\r\n\r\nexport const SettingForm: React.FC<FormPropsType> = React.memo(({changeCallback, values}) => {\r\n\r\n    let color1 = ''\r\n    let color2 = ''\r\n    if (values) {\r\n        color1 = values.color1\r\n        color2 = values.color2\r\n    }\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            color1: color1,\r\n            color2: color2,\r\n        },\r\n        validate: (values) => {\r\n            const errors: FormikErrorType = {};\r\n            if (!values.color1) {\r\n                errors.color1 = 'Required';\r\n            } else if (!/(^#[A-F0-9]{3}$)|(^#[A-F0-9]{6}$)/i.test(values.color1)) {\r\n                errors.color1 = 'Invalid color';\r\n            }\r\n            if (!values.color2) {\r\n                errors.color2 = 'Required';\r\n            } else if (!/(^#[A-F0-9]{3}$)|(^#[A-F0-9]{6}$)/i.test(values.color2)) {\r\n                errors.color2 = 'Invalid color';\r\n            }\r\n\r\n            return errors;\r\n        },\r\n\r\n        onSubmit: (values: FormValuesType) => {\r\n            changeCallback(values)\r\n\r\n            formik.resetForm()\r\n        },\r\n    });\r\n\r\n    return (\r\n        <form className={s.formBox} onSubmit={formik.handleSubmit}>\r\n            <label htmlFor=\"color1\" className={s.labelTitle}>enter your color for begin gradient</label>\r\n            <input\r\n                placeholder={values?.color1}\r\n                {...formik.getFieldProps('color1')}  />\r\n            <div style={{'color': 'red', 'height': '10px'}}>\r\n                {formik.touched.color1 && formik.errors.color1 && formik.errors.color1}\r\n            </div>\r\n            <label htmlFor=\"color1\" className={s.labelTitle}>enter your color for end gradient</label>\r\n            <input\r\n                placeholder={values?.color2}\r\n                {...formik.getFieldProps('color2')}  />\r\n            <div style={{'color': 'red', 'height': '10px'}}>\r\n                {formik.touched.color2 && formik.errors.color2 && formik.errors.color2}\r\n            </div>\r\n\r\n\r\n            <button type=\"submit\">add gradient</button>\r\n        </form>\r\n    )\r\n})\r\n\r\n\r\ntype FormPropsType = {\r\n    values?: { color1: string, color2: string }\r\n    changeCallback: (values: FormValuesType) => void\r\n}\r\n\r\ntype FormikErrorType = {\r\n    color1?: string\r\n    color2?: string\r\n}\r\nexport type FormValuesType = {\r\n    color1: string\r\n    color2: string\r\n}\r\n\r\n","import React from \"react\";\r\nimport s from './NewGradient.module.scss'\r\nimport {FormValuesType, SettingForm} from \"../../form/SettingForm\";\r\nimport {addNewGradient} from \"../../../bll/gradients-reducer\";\r\nimport {useAppDispatch} from \"../../../bll/store\";\r\nimport {v4 as uuidv4} from \"uuid\";\r\nimport {Link, useNavigate} from \"react-router-dom\";\r\n\r\nexport const NewGradient: React.FC = React.memo(() => {\r\n\r\n    const navigate = useNavigate();\r\n    const dispatch = useAppDispatch()\r\n\r\n    const changeCallback = (values: FormValuesType) => {\r\n        const id = setId()\r\n        const newGradient = {...values, id}\r\n        dispatch(addNewGradient({gradient: newGradient}))\r\n        navigate('/')\r\n    }\r\n\r\n    function setId(): string {\r\n        return uuidv4()\r\n    }\r\n\r\n    return (\r\n        <div className={s.containerNew}>\r\n            <div className={s.text}>please enter your colors for gradient or push <Link to={'/'}>this</Link> for go out\r\n            </div>\r\n            <SettingForm changeCallback={changeCallback}/>\r\n        </div>\r\n    )\r\n})\r\n\r\n","import React from \"react\";\r\nimport {FormValuesType, SettingForm} from \"../../form/SettingForm\";\r\nimport s from \"./EditGradient.module.scss\";\r\nimport {Link, useNavigate, useParams} from \"react-router-dom\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppRootStateType, useAppDispatch} from \"../../../bll/store\";\r\nimport {changeColorsGradient, GradientType} from \"../../../bll/gradients-reducer\";\r\n\r\nexport const EditGradient: React.FC = React.memo(() => {\r\n\r\n    let {id} = useParams()\r\n    const navigate = useNavigate()\r\n    const dispatch = useAppDispatch()\r\n    const gradients = useSelector<AppRootStateType, GradientType[]>(state => state.gradients)\r\n\r\n    let gradient: GradientType [] = gradients ? gradients.filter(i => i.id === id) : []\r\n    let gradientValues\r\n        if (gradient.length) {\r\n            gradientValues = {\r\n                color1: gradient[0].color1,\r\n                color2: gradient[0].color2\r\n            }\r\n    }\r\n\r\n    const changeCallback = (values: FormValuesType) => {\r\n        const newGradient = {\r\n            id: gradient[0].id,\r\n            color1: values.color1,\r\n            color2: values.color2,\r\n        }\r\n        dispatch(changeColorsGradient({gradient: newGradient}))\r\n        navigate('/')\r\n    }\r\n\r\n    return (\r\n        <div className={s.containerEdit}>\r\n            <div className={s.text}>please change colors of gradient or push <Link to={'/'}>this</Link> for go out</div>\r\n            <SettingForm changeCallback={changeCallback} values={gradientValues}/>\r\n        </div>\r\n    )\r\n})\r\n\r\n","import React from 'react';\nimport {Navigate, Route, Routes} from 'react-router-dom';\nimport s from './App.module.scss';\nimport {HomePage} from \"../features/home/HomePage\";\nimport {NewGradient} from \"../features/newItem/NewGradient\";\nimport {EditGradient} from \"../features/editItem/EditGradient\";\n\nfunction App() {\n    return (\n        <div className={s.app}>\n\n            <Routes>\n                <Route path={'/'} element={<HomePage/>}/>\n                <Route path={'/new'} element={<NewGradient/>}/>\n                <Route path={'/edit/:id'} element={<EditGradient/>}/>\n                <Route path=\"*\" element={<Navigate replace to=\"/\"/>}/>\n            </Routes>\n\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './ui/app/App';\nimport reportWebVitals from './reportWebVitals';\nimport {store} from \"./bll/store\";\nimport {BrowserRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <BrowserRouter>\n                <App/>\n            </BrowserRouter>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}