{"version":3,"sources":["ui/form/SettingForm.module.scss","ui/features/home/HomePage.module.scss","ui/features/gradient/Gradient.module.scss","ui/features/editItem/EditGradient.module.scss","ui/app/App.module.scss","ui/features/gradient/Gradient.tsx","bll/gradients-reducer.ts","bll/store.ts","ui/features/home/HomePage.tsx","ui/form/SettingForm.tsx","ui/features/editItem/EditGradient.tsx","ui/app/App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","Gradient","gradient","removeGradient","navigate","useNavigate","color1","color2","styleButton1","backgroundColor","color","borderColor","styleButton2","gradientStyle","background","className","s","gradientContainer","style","buttonBlock","onClick","id","slice","createSlice","name","initialState","reducers","setColorsGradient","state","action","index","findIndex","i","payload","push","splice","deleteGradient","gradientsReducer","reducer","actions","rootReducer","combineReducers","gradients","store","configureStore","middleware","getDefaultMiddleware","prepend","thunk","window","useAppDispatch","useDispatch","HomePage","dispatch","useSelector","containerHome","buttonAddGradient","to","infoContainer","length","containerGradient","map","item","ind","SettingForm","React","memo","changeCallback","values","formik","useFormik","initialValues","validate","errors","regExp","test","onSubmit","resetForm","formBox","handleSubmit","htmlFor","labelTitle","placeholder","getFieldProps","errorText","touched","type","EditGradient","gradientValues","gradientID","useParams","filter","containerEdit","text","uuidv4","newGradient","App","app","path","element","replace","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9912a3d4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formBox\":\"SettingForm_formBox__2QVk2\",\"labelTitle\":\"SettingForm_labelTitle__YcYwH\",\"errorText\":\"SettingForm_errorText__39f2d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"containerHome\":\"HomePage_containerHome__38mC7\",\"buttonAddGradient\":\"HomePage_buttonAddGradient__1UFNA\",\"infoContainer\":\"HomePage_infoContainer__6EhgV\",\"containerGradient\":\"HomePage_containerGradient__2zuFu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gradientContainer\":\"Gradient_gradientContainer__896ij\",\"buttonBlock\":\"Gradient_buttonBlock__3C9r9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"containerEdit\":\"EditGradient_containerEdit__3ABy9\",\"text\":\"EditGradient_text__1E77Q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__fnbR_\"};","import React from \"react\";\r\nimport s from './Gradient.module.scss'\r\nimport {GradientType} from \"../../../bll/gradients-reducer\";\r\nimport {useNavigate} from \"react-router-dom\";\r\n\r\n\r\nexport const Gradient: React.FC<GradientPropsType> = ({gradient, removeGradient}) => {\r\n\r\n    const navigate = useNavigate()\r\n\r\n    const {color1, color2} = gradient\r\n    const styleButton1 = {\r\n        backgroundColor: color2,\r\n        color: color2,\r\n        borderColor: color1,\r\n    }\r\n    const styleButton2 = {\r\n        backgroundColor: color1,\r\n        color: color1,\r\n        borderColor: color2,\r\n    }\r\n\r\n    const gradientStyle = {\r\n        background: `linear-gradient(to right, ${color1}, ${color2})`,\r\n    }\r\n    const clickDelete = () => {\r\n        removeGradient(gradient.id)\r\n    }\r\n    const clickEdit = () => {\r\n        navigate(`edit/${gradient.id}`)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={s.gradientContainer} style={gradientStyle}>\r\n                <div style={{color: color1}}><span>{color1}</span></div>\r\n                <div className={s.buttonBlock}>\r\n                    <button style={styleButton1} onClick={clickDelete}><span>delete</span></button>\r\n                    <button style={styleButton2} onClick={clickEdit}><span>edit</span></button>\r\n                </div>\r\n                <div style={{color: color2}}><span>{color2}</span></div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n//types\r\n\r\ntype GradientPropsType = {\r\n    gradient: GradientType\r\n    removeGradient: (id: string) => void\r\n}\r\n","import {createSlice, PayloadAction} from \"@reduxjs/toolkit\"\r\n\r\nconst slice = createSlice({\r\n\r\n    name: 'gradients',\r\n    initialState: [] as Array<GradientType>,\r\n    reducers: {\r\n        setColorsGradient(state, action: PayloadAction<{ gradient: GradientType }>) {\r\n            let index:number = state.findIndex(i => i.id === action.payload.gradient.id)\r\n            index < 0? state.push(action.payload.gradient) \r\n                  : state.splice(index, 1, action.payload.gradient)\r\n        },\r\n        deleteGradient(state, action: PayloadAction<{ id: string }>) {\r\n            const index = state.findIndex(i => i.id === action.payload.id)\r\n            state.splice(index, 1)\r\n        },\r\n        \r\n    },\r\n})\r\n\r\nexport const gradientsReducer = slice.reducer\r\n\r\nexport const {setColorsGradient, deleteGradient, } = slice.actions\r\n\r\n\r\nexport type GradientType = {\r\n    id: string\r\n    color1: string\r\n    color2: string\r\n\r\n}\r\n\r\n","import thunk from 'redux-thunk';\r\nimport {combineReducers, configureStore} from \"@reduxjs/toolkit\";\r\nimport {gradientsReducer} from \"./gradients-reducer\";\r\nimport {useDispatch} from \"react-redux\";\r\n\r\nconst rootReducer = combineReducers({\r\n    gradients: gradientsReducer,\r\n})\r\n\r\nexport const store = configureStore({\r\n    reducer: rootReducer,\r\n    middleware: (getDefaultMiddleware) => getDefaultMiddleware().prepend(thunk)\r\n})\r\n\r\n\r\n// @ts-ignore\r\nwindow.store = store;\r\n\r\n\r\n//redux common types\r\nexport type RootReducerType = typeof rootReducer\r\n\r\nexport const useAppDispatch = () => useDispatch<AppDispatchType>()\r\n// определить автоматически тип всего объекта состояния\r\nexport type AppRootStateType = ReturnType<RootReducerType>\r\nexport type AppDispatchType = typeof store.dispatch","import React from \"react\";\r\nimport {Gradient} from \"../gradient/Gradient\";\r\nimport s from './HomePage.module.scss'\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppRootStateType, useAppDispatch} from \"../../../bll/store\";\r\nimport {deleteGradient, GradientType} from \"../../../bll/gradients-reducer\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nexport const HomePage: React.FC = () => {\r\n\r\n    const dispatch = useAppDispatch()\r\n    const gradients = useSelector<AppRootStateType, GradientType[]>(state => state.gradients)\r\n\r\n    const removeGradient = (id: string) => {\r\n        dispatch(deleteGradient({id}))\r\n    }\r\n\r\n    return (\r\n        <div className={s.containerHome}>\r\n            <div className={s.buttonAddGradient}>\r\n                <Link to='new'>add new gradient</Link>\r\n            </div>\r\n            <div className={s.infoContainer}>\r\n                {`colors gradient${gradients.length > 1 ? 's' : ''}: `}<b>{gradients.length}</b>\r\n            </div>\r\n            <div className={s.containerGradient}>\r\n\r\n                {\r\n                    gradients.length\r\n                        ? gradients.map((item, ind) => (<Gradient key={ind}\r\n                                                                  gradient={item}\r\n                                                                  removeGradient={removeGradient}/>))\r\n                        : 'you do not have gradients'\r\n                }\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}","import {useFormik} from \"formik\";\r\nimport React from \"react\";\r\nimport s from './SettingForm.module.scss'\r\n\r\nexport const SettingForm: React.FC<FormPropsType> = React.memo(({changeCallback, values}) => {\r\n\r\n    let color1 = ''\r\n    let color2 = ''\r\n    if (values) {\r\n        color1 = values.color1\r\n        color2 = values.color2\r\n    }\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            color1: color1,\r\n            color2: color2,\r\n        },\r\n        validate: (values) => {\r\n            const errors: FormikErrorType = {};\r\n            const regExp = /(^#[A-F0-8]{3}$)|(^#[A-F0-8]{6}$)/i\r\n            if (!values.color1) {\r\n                errors.color1 = 'Required';\r\n            } else if (!regExp.test(values.color1)) {\r\n                errors.color1 = 'Invalid color';\r\n            }\r\n            if (!values.color2) {\r\n                errors.color2 = 'Required';\r\n            } else if (!regExp.test(values.color2)) {\r\n                errors.color2 = 'Invalid color';\r\n            }\r\n\r\n            return errors;\r\n        },\r\n\r\n        onSubmit: (values: FormValuesType) => {\r\n            changeCallback(values)\r\n\r\n            formik.resetForm()\r\n        },\r\n    });\r\n\r\n    return (\r\n        <form className={s.formBox} onSubmit={formik.handleSubmit}>\r\n            <label htmlFor=\"color1\" className={s.labelTitle}>enter your color for begin gradient</label>\r\n            <input\r\n                placeholder={values?.color1}\r\n                {...formik.getFieldProps('color1')}  />\r\n            <div className={s.errorText}>\r\n                {formik.touched.color1 && formik.errors.color1 && formik.errors.color1}\r\n            </div>\r\n            <label htmlFor=\"color1\" className={s.labelTitle}>enter your color for end gradient</label>\r\n            <input\r\n                placeholder={values?.color2}\r\n                {...formik.getFieldProps('color2')}  />\r\n            <div className={s.errorText}>\r\n                {formik.touched.color2 && formik.errors.color2 && formik.errors.color2}\r\n            </div>\r\n\r\n\r\n            <button type=\"submit\">save gradient</button>\r\n        </form>\r\n    )\r\n})\r\n\r\n\r\ntype FormPropsType = {\r\n    values?: { color1: string, color2: string }\r\n    changeCallback: (values: FormValuesType) => void\r\n}\r\n\r\ntype FormikErrorType = {\r\n    color1?: string\r\n    color2?: string\r\n}\r\nexport type FormValuesType = {\r\n    color1: string\r\n    color2: string\r\n}\r\n\r\n","import React from \"react\";\r\nimport {FormValuesType, SettingForm} from \"../../form/SettingForm\";\r\nimport s from \"./EditGradient.module.scss\";\r\nimport {Link, useNavigate, useParams} from \"react-router-dom\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppRootStateType, useAppDispatch} from \"../../../bll/store\";\r\nimport {setColorsGradient, GradientType} from \"../../../bll/gradients-reducer\";\r\nimport {v4 as uuidv4} from \"uuid\";\r\n\r\nexport const EditGradient: React.FC = React.memo(() => {\r\n\r\n    let {gradientID} = useParams()\r\n    const navigate = useNavigate()\r\n    const dispatch = useAppDispatch()\r\n    const gradients = useSelector<AppRootStateType, GradientType[]>(state => state.gradients)\r\n\r\n    let gradient: GradientType [] = gradients ? gradients.filter(i => i.id === gradientID) : []\r\n    let gradientValues\r\n        if (gradient.length) {\r\n            gradientValues = {\r\n                color1: gradient[0].color1,\r\n                color2: gradient[0].color2\r\n            }\r\n        }\r\n\r\n    const changeCallback = (values: FormValuesType) => {\r\n        const id = (gradient.length > 0)? gradient[0].id: setId()\r\n        const newGradient = {...values, id}\r\n        dispatch(setColorsGradient({gradient: newGradient}))\r\n        navigate('/')\r\n    }\r\n\r\n    function setId(): string {\r\n        return uuidv4()\r\n    }\r\n\r\n    return (\r\n        <div className={s.containerEdit}>\r\n            <div className={s.text}>please change colors of gradient or push <Link to={'/'}><b>this</b></Link> for go out</div>\r\n            <SettingForm changeCallback={changeCallback} values={gradientValues}/>\r\n        </div>\r\n    )\r\n})\r\n\r\n","import React from 'react';\nimport {Navigate, Route, Routes} from 'react-router-dom';\nimport s from './App.module.scss';\nimport {HomePage} from \"../features/home/HomePage\";\nimport {EditGradient} from \"../features/editItem/EditGradient\";\n\nfunction App() {\n    return (\n        <div className={s.app}>\n            \n                <Routes>\n                    <Route path={'/'} element={<HomePage/>}/>\n                    <Route path={'/new'} element={<EditGradient/>}/>\n                    <Route path={'/edit/:gradientID'} element={<EditGradient/>}/>\n                    <Route path=\"*\" element={<Navigate replace to=\"/\"/>}/>\n                </Routes>\n           \n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './ui/app/App';\nimport reportWebVitals from './reportWebVitals';\nimport {store} from \"./bll/store\";\nimport {BrowserRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <BrowserRouter>\n                <App/>\n            </BrowserRouter>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}